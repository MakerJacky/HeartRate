<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\evaluation.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\evaluation.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Fri Sep 22 17:40:21 2017
<BR><P>
<H3>Maximum Stack Usage =         80 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
HardFault_IRQ_Handler &rArr; __2printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[24]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">DMA_int_IRQ0Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">DMA_int_IRQ0Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">DMA_int_IRQ0Handler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[6]">DMA_int_IRQ0Handler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[7]">DMA_int_IRQ1Handler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[7]">DMA_int_IRQ1Handler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[f]">GPIO_0_int_IRQHandler</a> from mxd2660_gpio.o(i.GPIO_0_int_IRQHandler) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[f]">GPIO_0_int_IRQHandler</a> from mxd2660_gpio.o(i.GPIO_0_int_IRQHandler) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[10]">GPIO_1_int_IRQHandler</a> from mxd2660_gpio.o(i.GPIO_1_int_IRQHandler) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[10]">GPIO_1_int_IRQHandler</a> from mxd2660_gpio.o(i.GPIO_1_int_IRQHandler) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[11]">GPIO_2_int_IRQHandler</a> from mxd2660_gpio.o(i.GPIO_2_int_IRQHandler) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[11]">GPIO_2_int_IRQHandler</a> from mxd2660_gpio.o(i.GPIO_2_int_IRQHandler) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[1d]">HardFault_IRQ_Handler</a> from err_debug.o(i.HardFault_IRQ_Handler) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[9]">I2C0_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[9]">I2C0_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[a]">I2C1_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[a]">I2C1_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[8]">I2S_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[8]">I2S_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[12]">KEYBOARD_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[12]">KEYBOARD_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[4]">SPI0_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[4]">SPI0_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[5]">SPI1_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[5]">SPI1_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[c]">TMR0_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[c]">TMR0_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[d]">TMR1_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[d]">TMR1_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[e]">TMR2_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[e]">TMR2_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[2]">UART0_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[2]">UART0_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[3]">UART1_int_IRQHandler</a> from mxd2660_uart1.o(i.UART1_int_IRQHandler) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[3]">UART1_int_IRQHandler</a> from mxd2660_uart1.o(i.UART1_int_IRQHandler) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[b]">_7816_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[b]">_7816_int_IRQHandler</a> from cm0plus_startup.o(.text) referenced from sys.o(i.user_irq_register)
 <LI><a href="#[0]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from cm0plus_startup.o(.text)
 <LI><a href="#[15]">ancs_timeout_handler</a> from app_ble.o(i.ancs_timeout_handler) referenced from app_ble.o(i.ble_app_init)
 <LI><a href="#[1e]">app_task</a> from app_task.o(i.app_task) referenced from app_task.o(.constdata)
 <LI><a href="#[14]">fputc</a> from debug.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[1b]">is_log_canbe_sleep</a> from debug.o(i.is_log_canbe_sleep) referenced from sys.o(i.user_call_back_register)
 <LI><a href="#[13]">main</a> from sys.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[17]">main_process</a> from app_main.o(i.main_process) referenced from sys.o(i.user_call_back_register)
 <LI><a href="#[18]">os_stack_overflow</a> from err_debug.o(i.os_stack_overflow) referenced from sys.o(i.user_call_back_register)
 <LI><a href="#[1a]">recover_info_after_wakeup_cb</a> from app_main.o(i.recover_info_after_wakeup_cb) referenced from sys.o(i.user_call_back_register)
 <LI><a href="#[22]">reset_handler</a> from cm0plus_startup.o(.text) referenced from cm0plus_startup.o(RESET)
 <LI><a href="#[19]">save_info_before_sleep_cb</a> from app_main.o(i.save_info_before_sleep_cb) referenced from sys.o(i.user_call_back_register)
 <LI><a href="#[16]">system_assert_debug</a> from err_debug.o(i.system_assert_debug) referenced from sys.o(i.user_call_back_register)
 <LI><a href="#[1f]">trx_get_attrLenCB</a> from mxd_trx_service.o(i.trx_get_attrLenCB) referenced from mxd_trx_service.o(.data)
 <LI><a href="#[20]">trx_read_attrCB</a> from mxd_trx_service.o(i.trx_read_attrCB) referenced from mxd_trx_service.o(.data)
 <LI><a href="#[21]">trx_write_attrCB</a> from mxd_trx_service.o(i.trx_write_attrCB) referenced from mxd_trx_service.o(.data)
 <LI><a href="#[1c]">uart1_Log_output</a> from debug.o(i.uart1_Log_output) referenced from sys.o(i.user_call_back_register)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[80]"></a>GATTS_addChar</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trx_init_service
</UL>

<P><STRONG><a name="[81]"></a>GATTS_addCharDescrip_client_config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trx_init_service
</UL>

<P><STRONG><a name="[82]"></a>GATTS_addServiceEnd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trx_init_service
</UL>

<P><STRONG><a name="[7f]"></a>GATTS_addServiceStart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trx_init_service
</UL>

<P><STRONG><a name="[3d]"></a>ancs_connected_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_all_characteristic_found_handler
</UL>

<P><STRONG><a name="[46]"></a>ancs_discover_again</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_timeout_handler
</UL>

<P><STRONG><a name="[3f]"></a>ancs_encrypt_chg_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_discover_svc_by_uuid
</UL>

<P><STRONG><a name="[42]"></a>ancs_onoff_notify</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_server_config_notify
</UL>

<P><STRONG><a name="[48]"></a>ancs_write_get_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_write_get_data_ntf
</UL>

<P><STRONG><a name="[57]"></a>ble_api_adv_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_init
</UL>

<P><STRONG><a name="[56]"></a>ble_api_att_auto_exchange_mtu_onoff</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_init
</UL>

<P><STRONG><a name="[55]"></a>ble_api_device_config_device_name</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_init
</UL>

<P><STRONG><a name="[60]"></a>ble_api_long_term_key_request_negative_replay</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[5c]"></a>ble_api_long_term_key_request_reply</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[5d]"></a>ble_api_send_security_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[54]"></a>ble_msg_api_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_init
</UL>

<P><STRONG><a name="[5a]"></a>little_endian_read_16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_device_db_add
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[7e]"></a>log_output_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_assert_debug
</UL>

<P><STRONG><a name="[68]"></a>memcmp2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_device_db_find_info
</UL>

<P><STRONG><a name="[70]"></a>ota_init_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init
</UL>

<P><STRONG><a name="[6d]"></a>main_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>osMessageGet</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
</UL>

<P><STRONG><a name="[4f]"></a>osPoolCreate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
</UL>

<P><STRONG><a name="[4e]"></a>osPoolFree</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
</UL>

<P><STRONG><a name="[50]"></a>osThreadCreate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
</UL>

<P><STRONG><a name="[31]"></a>osThreadGetId</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[32]"></a>osThreadTerminate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[79]"></a>system_32k_clk_select</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage_init
</UL>

<P><STRONG><a name="[78]"></a>system_clk_gate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage_init
</UL>

<P><STRONG><a name="[6c]"></a>system_power_dcdc_mode_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>system_set_low_power_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage_init
</UL>

<P><STRONG><a name="[6b]"></a>system_set_radio_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>system_set_radio_tx_power</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage_init
</UL>

<P><STRONG><a name="[6a]"></a>system_set_rf_tx_power</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>timer_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_init
</UL>

<P><STRONG><a name="[73]"></a>timer_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[59]"></a>timer_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[47]"></a>timer_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symbol.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_timeout_handler
</UL>

<P><STRONG><a name="[22]"></a>reset_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))

<P><STRONG><a name="[6]"></a>DMA_int_IRQ0Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_int_IRQ0Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_int_IRQ0Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[7]"></a>DMA_int_IRQ1Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[9]"></a>I2C0_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[a]"></a>I2C1_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[8]"></a>I2S_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[12]"></a>KEYBOARD_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[4]"></a>SPI0_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[5]"></a>SPI1_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[c]"></a>TMR0_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[d]"></a>TMR1_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[e]"></a>TMR2_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[2]"></a>UART0_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[b]"></a>_7816_int_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0plus_startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[24]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cm0plus_startup.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[52]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_device_db_add
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_default_init
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_init
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;little_endian_read_32bit
</UL>

<P><STRONG><a name="[84]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[86]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[87]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>app_main</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_main.o(.ARM.__at_0x2B100), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = app_main &rArr; power_manage_init &rArr; system_pins_wakeup_enable &rArr; gpio_wakeup_enable_gpios &rArr; gpio_config_hw_type
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadTerminate
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dly_us
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_irq_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_init
</UL>

<P><STRONG><a name="[33]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[88]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> cm0plus_startup.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[35]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[34]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[8d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[8e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[25]"></a>__asm___10_app_task_c_57459531____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(.rev16_text), UNUSED, KEPT)

<P><STRONG><a name="[26]"></a>__asm___10_app_task_c_57459531____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(.revsh_text), UNUSED, KEPT)

<P><STRONG><a name="[f]"></a>GPIO_0_int_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mxd2660_gpio.o(i.GPIO_0_int_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_0_int_IRQHandler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[10]"></a>GPIO_1_int_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mxd2660_gpio.o(i.GPIO_1_int_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_1_int_IRQHandler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[11]"></a>GPIO_2_int_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mxd2660_gpio.o(i.GPIO_2_int_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_2_int_IRQHandler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[1d]"></a>HardFault_IRQ_Handler</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, err_debug.o(i.HardFault_IRQ_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HardFault_IRQ_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_flash_nvr_read
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[3]"></a>UART1_int_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mxd2660_uart1.o(i.UART1_int_IRQHandler))
<BR>[Address Reference Count : 2]<UL><LI> cm0plus_startup.o(RESET)
<LI> sys.o(i.user_irq_register)
</UL>
<P><STRONG><a name="[38]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8f]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[37]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_assert_debug
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_info_before_sleep_cb
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_stack_overflow
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_IRQ_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_all_characteristic_found_handler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[90]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[91]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[92]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[3c]"></a>ancs_all_characteristic_found_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ancs_service.o(i.ancs_all_characteristic_found_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ancs_all_characteristic_found_handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_connected_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_discover_svc_by_uuid
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[5e]"></a>ancs_data_ntf_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ancs_service.o(i.ancs_data_ntf_handler))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[3e]"></a>ancs_discover_svc_by_uuid</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ancs_service.o(i.ancs_discover_svc_by_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ancs_discover_svc_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_encrypt_chg_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_all_characteristic_found_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[40]"></a>ancs_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ancs_service.o(i.ancs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ancs_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_connected_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[41]"></a>ancs_server_config_notify</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ancs_service.o(i.ancs_server_config_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ancs_server_config_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_onoff_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[43]"></a>ancs_source_ntf_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ancs_service.o(i.ancs_source_ntf_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ancs_source_ntf_handler &rArr; little_endian_read_32bit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;little_endian_read_32bit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_write_get_data_ntf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[15]"></a>ancs_timeout_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_ble.o(i.ancs_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ancs_timeout_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_discover_again
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble.o(i.ble_app_init)
</UL>
<P><STRONG><a name="[45]"></a>ancs_write_get_data_ntf</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ancs_service.o(i.ancs_write_get_data_ntf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ancs_write_get_data_ntf
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_write_get_data
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_source_ntf_handler
</UL>

<P><STRONG><a name="[2e]"></a>app_irq_init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, app_main.o(i.app_irq_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_irq_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[1e]"></a>app_task</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_task.o(i.app_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_task &rArr; ble_msg_proc &rArr; ancs_all_characteristic_found_handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolFree
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>app_task_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_task.o(i.app_task_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_task_init &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolCreate
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[51]"></a>ble_app_default_init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, app_ble.o(i.ble_app_default_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_app_default_init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_init
</UL>

<P><STRONG><a name="[30]"></a>ble_app_init</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, app_ble.o(i.ble_app_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_app_init &rArr; ble_app_default_init
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_api_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_api_device_config_device_name
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_api_att_auto_exchange_mtu_onoff
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_api_adv_start
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_create
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_app_default_init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[4d]"></a>ble_msg_proc</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, app_ble.o(i.ble_msg_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_msg_proc &rArr; ancs_all_characteristic_found_handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;little_endian_read_16
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_api_send_security_req
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_api_long_term_key_request_reply
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_api_long_term_key_request_negative_replay
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_api_adv_start
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_source_ntf_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_server_config_notify
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_discover_svc_by_uuid
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_ntf_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_all_characteristic_found_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_device_db_find_info
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_device_db_add
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
</UL>

<P><STRONG><a name="[2f]"></a>ble_profile_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_main.o(i.ble_profile_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_profile_init &rArr; trx_init_service
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trx_init_service
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[63]"></a>dly_cycles</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, utility.o(i.dly_cycles), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dly_us
</UL>

<P><STRONG><a name="[2b]"></a>dly_us</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, utility.o(i.dly_us), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dly_us
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dly_cycles
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pins_wakeup_enable
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[14]"></a>fputc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, debug.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fputc &rArr; uart1_send
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[66]"></a>gpio_config_hw_type</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, mxd2660_gpio.o(i.gpio_config_hw_type), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_config_hw_type
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_enable_gpios
</UL>

<P><STRONG><a name="[74]"></a>gpio_init_function</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mxd2660_gpio.o(i.gpio_init_function))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_info_before_sleep_cb
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recover_info_after_wakeup_cb
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[67]"></a>gpio_init_input</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, mxd2660_gpio.o(i.gpio_init_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_init_input
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_info_before_sleep_cb
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_enable_gpios
</UL>

<P><STRONG><a name="[7d]"></a>gpio_read_input_bit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mxd2660_gpio.o(i.gpio_read_input_bit))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_info_before_sleep_cb
</UL>

<P><STRONG><a name="[65]"></a>gpio_wakeup_enable_gpios</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, mxd2660_gpio.o(i.gpio_wakeup_enable_gpios), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gpio_wakeup_enable_gpios &rArr; gpio_config_hw_type
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_hw_type
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_input
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pins_wakeup_enable
</UL>

<P><STRONG><a name="[1b]"></a>is_log_canbe_sleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, debug.o(i.is_log_canbe_sleep))
<BR>[Address Reference Count : 1]<UL><LI> sys.o(i.user_call_back_register)
</UL>
<P><STRONG><a name="[5f]"></a>le_bond_device_db_add</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_ble.o(i.le_bond_device_db_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = le_bond_device_db_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;little_endian_read_16
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[5b]"></a>le_bond_device_db_find_info</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, app_ble.o(i.le_bond_device_db_find_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = le_bond_device_db_find_info
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp2
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_proc
</UL>

<P><STRONG><a name="[44]"></a>little_endian_read_32bit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, utility.o(i.little_endian_read_32bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = little_endian_read_32bit
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_source_ntf_handler
</UL>

<P><STRONG><a name="[13]"></a>main</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sys.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_rf_tx_power
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_radio_mode
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_dcdc_mode_set
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_lib_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[17]"></a>main_process</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_main.o(i.main_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = main_process &rArr; uart1_Log_print
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_Log_print
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watch_dog_feed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(i.user_call_back_register)
</UL>
<P><STRONG><a name="[18]"></a>os_stack_overflow</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, err_debug.o(i.os_stack_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = os_stack_overflow &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_flash_nvr_read
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(i.user_call_back_register)
</UL>
<P><STRONG><a name="[62]"></a>ota_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_ota.o(i.ota_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ota_init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init_service
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_init
</UL>

<P><STRONG><a name="[2d]"></a>peripheral_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_main.o(i.peripheral_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = peripheral_init &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_irq_register
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_call_back_register
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_debug_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_debug_en
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_function
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[2c]"></a>power_manage_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_main.o(i.power_manage_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = power_manage_init &rArr; system_pins_wakeup_enable &rArr; gpio_wakeup_enable_gpios &rArr; gpio_config_hw_type
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pins_wakeup_enable
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_radio_tx_power
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_low_power_mode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clk_gate
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_32k_clk_select
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[1a]"></a>recover_info_after_wakeup_cb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_main.o(i.recover_info_after_wakeup_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = recover_info_after_wakeup_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_function
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(i.user_call_back_register)
</UL>
<P><STRONG><a name="[19]"></a>save_info_before_sleep_cb</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_main.o(i.save_info_before_sleep_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = save_info_before_sleep_cb &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read_input_bit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_input
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_function
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(i.user_call_back_register)
</UL>
<P><STRONG><a name="[77]"></a>sys_debug_en</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, debug.o(i.sys_debug_en), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[76]"></a>sys_debug_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, debug.o(i.sys_debug_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[16]"></a>system_assert_debug</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, err_debug.o(i.system_assert_debug))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = system_assert_debug &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_output_cb
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(i.user_call_back_register)
</UL>
<P><STRONG><a name="[7b]"></a>system_pins_wakeup_enable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys.o(i.system_pins_wakeup_enable), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = system_pins_wakeup_enable &rArr; gpio_wakeup_enable_gpios &rArr; gpio_config_hw_type
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_enable_gpios
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dly_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage_init
</UL>

<P><STRONG><a name="[1f]"></a>trx_get_attrLenCB</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mxd_trx_service.o(i.trx_get_attrLenCB))
<BR>[Address Reference Count : 1]<UL><LI> mxd_trx_service.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>trx_init_service</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, mxd_trx_service.o(i.trx_init_service), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = trx_init_service
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTS_addServiceStart
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTS_addServiceEnd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTS_addCharDescrip_client_config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTS_addChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_init
</UL>

<P><STRONG><a name="[20]"></a>trx_read_attrCB</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mxd_trx_service.o(i.trx_read_attrCB))
<BR>[Address Reference Count : 1]<UL><LI> mxd_trx_service.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>trx_write_attrCB</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mxd_trx_service.o(i.trx_write_attrCB))
<BR>[Address Reference Count : 1]<UL><LI> mxd_trx_service.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>uart1_Log_output</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, debug.o(i.uart1_Log_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart1_Log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(i.user_call_back_register)
</UL>
<P><STRONG><a name="[6e]"></a>uart1_Log_print</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, debug.o(i.uart1_Log_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart1_Log_print
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_process
</UL>

<P><STRONG><a name="[75]"></a>uart1_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mxd2660_uart1.o(i.uart1_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[64]"></a>uart1_send</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mxd2660_uart1.o(i.uart1_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart1_send
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[72]"></a>user_call_back_register</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sys.o(i.user_call_back_register), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[36]"></a>user_flash_nvr_read</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, mxd2660_flash.o(i.user_flash_nvr_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = user_flash_nvr_read
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_stack_overflow
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_IRQ_Handler
</UL>

<P><STRONG><a name="[71]"></a>user_irq_register</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, sys.o(i.user_irq_register), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[6f]"></a>watch_dog_feed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mxd2660_watch_dog.o(i.watch_dog_feed))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_process
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_main.o(i.NVIC_ClearPendingIRQ), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_irq_init
</UL>

<P><STRONG><a name="[4b]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_main.o(i.NVIC_EnableIRQ), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_irq_init
</UL>

<P><STRONG><a name="[4a]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_main.o(i.NVIC_SetPriority), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_irq_init
</UL>

<P><STRONG><a name="[39]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[3b]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3a]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
