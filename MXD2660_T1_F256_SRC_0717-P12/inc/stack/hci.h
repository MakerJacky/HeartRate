

#ifndef _HCI_H_
#define _HCI_H_

enum
{
    NO_ERROR = 0,
    FAIL  = 1,
    OVERFLOW = 2,
    NO_ENOUGH_FIFO = 3,
    ILLEGAL_COMMAND = 4,
    COMMAND_PAYLOAD_LENGTH_ERROR = 5,
    COMMAND_PAYLOAD_PARA_ERROR = 6,
    DTM_STATUS_ERROR = 7,
};



enum
{
    SUCCESS_HCE = 0X00,
    UNKNOWN_HCI_COMMAND_HCE = 0X01,
    UNKNOWN_CONNECTION_IDENTIFIER_HCE = 0X02,
    HARDWARE_FAILURE_HCE = 0X03,
    PAGE_TIMEOUT_HCE = 0X04,
    AUTHENTICATION_FAILURE_HCE = 0X05,
    PIN_OR_KEY_MISSING_HCE = 0X06,
    MEMORY_CAPACITY_EXCEEDED_HCE = 0X07,
    CONNECTION_TIMEOUT_HCE = 0X08,
    CONNECTION_LIMIT_EXCEEDED_HCE = 0X09,
    SYNCHRONOUS_CONNECTION_LIMIT_TO_A_DEVICE_EXCEEDED_HCE = 0X0A,
    ACL_CONNECTION_ALREADY_EXISTS_HCE = 0X0B,
    COMMAND_DISALLOWED_HCE = 0X0C,
    CONNECTION_REJECTED_DUE_TO_LIMITED_RESOURCES_HCE = 0X0D,
    CONNECTION_REJECTED_DUE_TO_SECURITY_REASONS_HCE = 0X0E,
    CONNECTION_REJECTED_DUE_TO_UNACCEPTABLE_BD_ADDR_HCE = 0X0F,
    CONNECTION_ACCEPT_TIMEOUT_EXCEEDED_HCE = 0X10,
    UNSUPPORTED_FEATURE_OR_PARAMETER_VALUE_HCE = 0X11,
    INVALID_HCI_COMMAND_PARAMETERS_HCE = 0X12,
    REMOTE_USER_TERMINATED_CONNECTION_HCE = 0X13,
    REMOTE_DEVICE_TERMINATED_CONNECTION_DUE_TO_LOW_RESOURCES_HCE = 0X14,
    REMOTE_DEVICE_TERMINATED_CONNECTION_DUE_TO_POWER_OFF_HCE = 0X15,
    CONNECTION_TERMINATED_BY_LOCAL_HOST_HCE = 0X16,
    REPEATED_ATTEMPTS_HCE = 0X17,
    PAIRING_NOT_ALLOWED_HCE = 0X18,
    UNKNOWN_LMP_PDU_HCE = 0X19,
    UNSUPPORTED_REMOTE_FEATURE_OR_UNSUPPORTED_LMP_FEATURE_HCE = 0X1A,
    SCO_OFFSET_REJECTED__HCE = 0X1B,
    SCO_INTERVAL_REJECTED_HCE = 0X1C,
    SCO_AIR_MODE_REJECTED_HCE = 0X1D,
    INVALID_LMP_PARAMETERS_HCE = 0X1E,
    UNSPECIFIED_ERROR_HCE = 0X1F,
    UNSUPPORTED_LMP_PARAMETER_VALUE_HCE = 0X20,
    ROLE_CHANGE_NOT_ALLOWED_HCE = 0X21,
    LMP_RESPONSE_TIMEOUT_OR_LL_RESPONSE_TIMEOUT_HCE = 0X22,
    LMP_ERROR_TRANSACTION_COLLISION_HCE = 0X23,
    LMP_PDU_NOT_ALLOWED_HCE = 0X24,
    ENCRYPTION_MODE_NOT_ACCEPTABLE_HCE = 0X25,
    LINK_KEY_CANNOT_BE_CHANGED_HCE = 0X26,
    REQUESTED_QOS_NOT_SUPPORTED_HCE = 0X27,
    INSTANT_PASSED_HCE = 0X28,
    PAIRING_WITH_UNIT_KEY_NOT_SUPPORTED_HCE = 0X29,
    DIFFERENT_TRANSACTION_COLLISION_HCE = 0X2A,
    RESERVED_HCE_2B = 0X2B,
    QOS_UNACCEPTABLE_PARAMETER_HCE = 0X2C,
    QOS_REJECTED_HCE = 0X2D,
    CHANNEL_CLASSIFICATION_NOT_SUPPORTED_HCE = 0X2E,
    INSUFFICIENT_SECURITY_HCE = 0X2F,
    PARAMETER_OUT_OF_MANDATORY_RANGE_HCE = 0X30,
    RESERVED_HCE_31 = 0X31,
    ROLE_SWITCH_PENDING_HCE = 0X32,
    RESERVED_HCE_33 = 0X33,
    RESERVED_SLOT_VIOLATION_HCE = 0X34,
    ROLE_SWITCH_FAILED_HCE = 0X35,
    EXTENDED_INQUIRY_RESPONSE_TOO_LARGE_HCE = 0X36,
    SECURE_SIMPLE_PAIRING_NOT_SUPPORTED_BY_HOST_HCE = 0X37,
    HOST_BUSY_PAIRING_HCE = 0X38,
    CONNECTION_REJECTED_DUE_TO_NO_SUITABLE_CHANNEL_FOUND_HCE = 0X39,
    CONTROLLER_BUSY_HCE = 0X3A,
    UNACCEPTABLE_CONNECTION_INTERVAL_HCE = 0X3B,
    DIRECTED_ADVERTISING_TIMEOUT_HCE = 0X3C,
    CONNECTION_TERMINATED_DUE_TO_MIC_FAILURE_HCE = 0X3D,
    CONNECTION_FAILED_TO_BE_ESTABLISHED_HCE = 0X3E,
    MAC_CONNECTION_FAILED_HCE = 0X3F,
    AES_PRE_NOT_READY = 0X8F,
} ;

enum HCI_TYPES
{
    HCI_COMMAND = 1,
    HCI_ACLDATA = 2,
    HCI_EVENT   = 4
};

typedef struct
{
    uint16 flag4handle12;
    uint16  length;
}   hci_acl_header_t;


/*
evt mask
0x0000000000000000 No LE events specified
0x0000000000000001 LE Connection Complete Event
0x0000000000000002 LE Advertising Report Event
0x0000000000000004 LE Connection Update Complete Event
0x0000000000000008 LE Read Remote Used Features Complete Event
0x0000000000000010 LE Long Term Key Request Event
0x0000000000000020 LE Remote Connection Parameter Request Event
0x000000000000001F Default
0xFFFFFFFFFFFFFFC0 Reserved for future use
*/
#define EVT_MASK_CON_CMPT_EVT  1
#define EVT_MASK_ADV_REPORT_EVT  2
#define EVT_MASK_CON_UPDATE_CMPT_EVT  4
#define EVT_MASK_READ_RMT_FEATURE_CMPT_EVT  8
#define EVT_MASK_LTK_REQ_EVT  0x10
#define EVT_MASK_RMT_CON_PARA_REQ_EVT  0x20


extern uint32 hci_aes_data[4];
extern uint32 hci_aes_key[4];
extern uint32 hci_aes_encryped_data[4];


/*
 * FUNCTION DECLARATIONS
 ****************************************************************************************
 */
extern void connection_disconnect(uint8 idx, uint8 status);


extern uint8 hci_le_connection_update(uint8 * data);
extern uint8 hci_le_create_connection_cancel(void);
extern uint8 hci_le_long_term_key_request_negative_replay(uint8 idx);
extern uint8 hci_le_long_term_key_request_reply(uint8 idx);
extern uint8 hci_le_start_encryption(uint8 idx);



#endif /* _HCI_H_ */
 
